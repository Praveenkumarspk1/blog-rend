@using Microsoft.AspNetCore.Components.Authorization
@using Blazored.Toast
@using Blazored.Toast.Configuration

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @{
                        var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
                        if (string.IsNullOrWhiteSpace(returnUrl))
                            NavigationManager.NavigateTo("/signin");
                        else
                            NavigationManager.NavigateTo($"/signin?returnUrl={Uri.EscapeDataString(returnUrl)}");
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="container mx-auto px-4 py-16 text-center">
                    <h1 class="text-4xl font-bold text-gray-900 mb-4">404 - Page Not Found</h1>
                    <p class="text-gray-600 mb-8">The page you're looking for doesn't exist or has been moved.</p>
                    <a href="/" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                        Go Home
                    </a>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="5"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-check"
                ErrorIcon="fa fa-times" />

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;
}
