@page "/following"
@using BlogSpace.Client.Services
@using BlogSpace.Client.Components.Blog
@inject ISupabaseService SupabaseService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<AuthorizeView>
    <NotAuthorized>
        <div class="text-center py-12">
            <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <i class="fas fa-lock h-12 w-12 text-gray-400"></i>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">Sign in required</h3>
            <p class="text-gray-600 mb-6">Please sign in to see posts from people you follow.</p>
            <div class="flex justify-center space-x-4">
                <a href="/signin"
                   class="px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                    Sign In
                </a>
                <a href="/signup"
                   class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition-colors">
                    Sign Up
                </a>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="space-y-6">
            <!-- Header -->
            <div class="flex items-center justify-between">
                <h1 class="text-2xl font-bold text-gray-900">Following Feed</h1>
                <a href="/explore"
                   class="text-blue-600 hover:text-blue-700 font-medium">
                    Find more people to follow
                </a>
            </div>

            @if (loading)
            {
                <div class="space-y-6">
                    @for (int i = 0; i < 3; i++)
                    {
                        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 animate-pulse">
                            <div class="flex items-center space-x-3 mb-4">
                                <div class="w-10 h-10 bg-gray-300 rounded-full"></div>
                                <div class="space-y-2">
                                    <div class="h-4 bg-gray-300 rounded w-24"></div>
                                    <div class="h-3 bg-gray-300 rounded w-16"></div>
                                </div>
                            </div>
                            <div class="space-y-3">
                                <div class="h-6 bg-gray-300 rounded w-3/4"></div>
                                <div class="h-4 bg-gray-300 rounded w-full"></div>
                                <div class="h-4 bg-gray-300 rounded w-2/3"></div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                @if (!posts.Any())
                {
                    <div class="text-center py-12">
                        <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-users h-12 w-12 text-gray-400"></i>
                        </div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-2">No posts yet</h3>
                        <p class="text-gray-600 mb-6">Follow some writers to see their posts here!</p>
                        <a href="/explore"
                           class="inline-block px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                            Explore Writers
                        </a>
                    </div>
                }
                else
                {
                    <div class="space-y-6">
                        @foreach (var post in posts)
                        {
                            <PostCard Post="post" />
                        }
                    </div>
                }
            }
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private List<Post> posts = new();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            await LoadPosts();
        }
    }

    private async Task LoadPosts()
    {
        try
        {
            loading = true;
            posts = await SupabaseService.GetFollowingPosts();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading following posts: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }
} 